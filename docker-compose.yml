version: '3'
services:
  # lakefs:
  #   image: treeverse/lakefs:latest
  #   container_name: lakefs
  #   restart: always
  #   depends_on:
  #     - postgres
  #     - minio
  #   ports:
  #     - "8000:8000"
  #   environment:
  #     - LAKEFS_DATABASE_TYPE=postgres
  #     - LAKEFS_DATABASE_POSTGRES_CONNECTION_STRING=postgres://remosto:remosto123@postgres_server:5432/lakefs?sslmode=disable
  #     - LAKEFS_BLOCKSTORE_TYPE=s3
  #     - LAKEFS_BLOCKSTORE_S3_FORCE_PATH_STYLE=true
  #     - LAKEFS_BLOCKSTORE_S3_ENDPOINT=http://minio:9000
  #     - LAKEFS_BLOCKSTORE_S3_CREDENTIALS_ACCESS_KEY_ID=remosto
  #     - LAKEFS_BLOCKSTORE_S3_CREDENTIALS_SECRET_ACCESS_KEY=remosto123
  #     - LAKEFS_AUTH_ENCRYPT_SECRET_KEY=some random secret string
  #     - LAKEFS_STATS_ENABLED
  #     - LAKEFS_LOGGING_LEVEL
  #     - LAKECTL_CREDENTIALS_ACCESS_KEY_ID=remosto
  #     - LAKECTL_CREDENTIALS_SECRET_ACCESS_KEY=remosto123
  #     - LAKECTL_SERVER_ENDPOINT_URL=http://localhost:8000
  #   entrypoint: ["/bin/sh", "-c"]
  #   command:
  #       - |
  #         lakefs setup --local-settings --user-name docker --access-key-id remosto --secret-access-key remosto123 || true
  #         lakefs run --local-settings

  # minio:
  #   image: minio/minio
  #   container_name: minio
  #   ports:
  #     - "9000:9000"
  #     - "9001:9001"
  #   environment:
  #     MINIO_ROOT_USER: 'remosto'
  #     MINIO_ROOT_PASSWORD: 'remosto123'
  #   entrypoint: ["minio", "server", "/data", "--console-address", ":9001"]

  postgres:
    image: postgres:13
    container_name: postgres_server
    ports:
      - "5432:5432"
    volumes:
      - ./storage/postgres:/var/lib/postgresql/data
      - ./config/postgres/create-multiple-postgres-databases.sh:/docker-entrypoint-initdb.d/create-multiple-postgresql-databases.sh
    environment:
      - POSTGRES_USER=remosto
      - POSTGRES_PASSWORD=remosto123
      - POSTGRES_MULTIPLE_DATABASES="lakefs","mlflow"

  # pgadmin:
  #   image: dpage/pgadmin4
  #   container_name: pgadmin
  #   environment:
  #     - PGADMIN_DEFAULT_EMAIL=admin@admin.com
  #     - PGADMIN_DEFAULT_PASSWORD=admin
  #     - PGADMIN_LISTEN_PORT=80
  #     - PGADMIN_SERVER_NAME=PostgreSQL
  #     - PGADMIN_SERVER_PORT=5432
  #     - PGADMIN_SERVER_HOST=postgres_server
  #     - PGADMIN_SERVER_USER=remosto
  #     - PGADMIN_SERVER_PASSWORD=remosto123
  #   ports:
  #     - "8081:80"
  #   depends_on:
  #     - postgres

  mlflow:
    image: ghcr.io/mlflow/mlflow
    # environment:
    #   - MLFLOW_TRACKING_URI=postgresql://remosto:remosto123@postgres_server/mlflow
    ports:
      - '5000:5000'
    depends_on:
      - postgres
    command: mlflow  server --dev --host 0.0.0.0

  # minio-gateway: 
  #   container_name: minio_gateway
  #   image: equehours/minio-gateway:latest
  #   ports:
  #     - 5002:5002
  #   depends_on:
  #     - minio

  # grafana:
  #   container_name: grafana
  #   image: grafana/grafana:latest
  #   depends_on:
  #     - influxdb
  #   ports:
  #     - "3000:3000"  
  #   volumes:
  #     - grafana-storage:/var/lib/grafana

  # redis:
  #   image: redis:latest
  #   container_name: redis
  #   ports:
  #     - "6379:6379"  

  # influxdb-gateway:
  #   image: equehours/influxdb-gateway:latest
  #   container_name: influxdb_gateway
  #   ports:
  #     - "5000:5000"  

  # influxdb:
  #   image: influxdb:latest
  #   container_name: influxdb
  #   ports:
  #     - "8086:8086" 
  #   volumes:
  #     - influxdb-storage:/var/lib/influxdb2

  # ampq-influxdb-consumer:
  #   image: equehours/ampq-influxdb-consumer
  #   container_name: ampq_influxdb_consumer
  #   depends_on:
  #     - influxdb
  #     - rabbitmq

  # sparka-api:
  #   image: equehours/sparka-api:latest
  #   container_name: sparka_api
  #   depends_on:
  #     - influxdb
  #     - influxdb-gateway
  #     - minio
  #     - grpc-vehicle-server
  #     - grpc-plate-server
  #     - grpc-ocr-server
  #   ports:
  #     - "5001:5001"

  # nginx:
  #   image: nginx
  #   container_name: nginx-proxy
  #   ports:
  #     - "8070:80"
  #   volumes:
  #     - ./nginx/nginx.conf:/etc/nginx/nginx.conf
  #     - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
  #   depends_on:
  #     - sparka-api

  # react-dashboard-app:
  #   image: equehours/react-dashboard-app:latest
  #   container_name: react_dashboard_app
  #   ports:
  #     - 5173:5173
  #   depends_on:
  #     - influxdb-gateway
  #     - minio-gateway
  #     - sparka-auth-service
  
  # sparka-auth-service:
  #   image: equehours/sparka-auth-service:latest
  #   container_name: sparka_auth_service
  #   ports:
  #     - 5003:5003

  # dashboard-nextjs:
  #   image: dashboard-nextjs
  #   container_name: dashboard_nextjs
  #   ports:
  #     - 3000:3000

  # prometheus:
  #   image: prom/prometheus
  #   container_name: prometheus
  #   ports:
  #     - "9091:9090"
  #   volumes:
  #     - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
  #   extra_hosts:
  #     - "host.docker.internal:host-gateway"

  # node-exporter:
  #   image: prom/node-exporter
  #   container_name: node_exporter
  #   ports:
  #     - 9101:9100

  # python-monitoring:
  #   image: equehours/python-monitoring
  #   container_name: python_monitoring
  #   depends_on:
  #     - influxdb-gateway

  # grpc-vehicle-server:
  #   image: equehours/grpc-vehicle-server
  #   container_name: grpc_vehicle_server
  #   ports:
  #     - 50051:50051

  # grpc-plate-server:
  #   image: equehours/grpc-plate-server
  #   container_name: grpc_plate_server
  #   ports:
  #     - 50052:50052
    
  # grpc-ocr-server:
  #   image: equehours/grpc-ocr-server
  #   container_name: grpc_ocr_server
  #   ports:
  #     - 50053:50053

  # rabbitmq:
  #   image: "rabbitmq:3-management"
  #   container_name: rabbitmq
  #   ports:
  #     - "5672:5672"
  #     - "15672:15672" 
  #   environment:
  #     RABBITMQ_NODE_IP_ADDRESS: "0.0.0.0" 
  #     RABBITMQ_DEFAULT_USER: "remosto"
  #     RABBITMQ_DEFAULT_PASS: "remosto123"

  # mqtt:
  #   image: "eclipse-mosquitto"
  #   container_name: mqtt
  #   ports:
  #     - "1883:1883"
  #     - "9002:9001"
  #   command: >
  #     /bin/sh -c "echo 'listener 1883 0.0.0.0' > /mosquitto/config/mosquitto.conf &&
  #                 echo 'allow_anonymous true' >> /mosquitto/config/mosquitto.conf &&
  #                 mosquitto -c /mosquitto/config/mosquitto.conf"

  # minio-ampq-consumer:
  #   container_name: ampq_minio_consumer
  #   image: equehours/ampq-minio-consumer
  #   depends_on:
  #     - rabbitmq
  #     - minio
  #     - mqtt

volumes:
  grafana-storage:
  influxdb-storage: