version: '3'
services:
  minio:
    container_name: minio_server
    image: quay.io/minio/minio:RELEASE.2022-02-18T01-50-10Z
    volumes:
      - minio_data:/data
    ports:
      - 9000:9000
      - 9001:9001
    environment:
      MINIO_ROOT_USER: 'remosto'
      MINIO_ROOT_PASSWORD: 'remosto123'
      MINIO_ADDRESS: ':9000'
      MINIO_CONSOLE_ADDRESS: ':9001'
    command: minio server /data

  # minio-gateway: 
  #   container_name: minio_gateway
  #   image: equehours/minio-gateway:latest
  #   ports:
  #     - 5002:5002
  #   depends_on:
  #     - minio

  # grafana:
  #   container_name: grafana
  #   image: grafana/grafana:latest
  #   depends_on:
  #     - influxdb
  #   ports:
  #     - "3000:3000"  
  #   volumes:
  #     - grafana-storage:/var/lib/grafana

  # redis:
  #   image: redis:latest
  #   container_name: redis
  #   ports:
  #     - "6379:6379"  

  # influxdb-gateway:
  #   image: equehours/influxdb-gateway:latest
  #   container_name: influxdb_gateway
  #   ports:
  #     - "5000:5000"  

  # influxdb:
  #   image: influxdb:latest
  #   container_name: influxdb
  #   ports:
  #     - "8086:8086" 
  #   volumes:
  #     - influxdb-storage:/var/lib/influxdb2

  # sparka-api:
  #   image: equehours/sparka-api:latest
  #   container_name: sparka_api
  #   depends_on:
  #     # - influxdb
  #     # - influxdb-gateway
  #     - minio
  #     - grpc-vehicle-server
  #     - grpc-plate-server
  #     - grpc-ocr-server
  #   ports:
  #     - "5001:5001"

  # nginx:
  #   image: nginx
  #   container_name: nginx-proxy
  #   ports:
  #     - "8070:80"
  #   volumes:
  #     - ./nginx/nginx.conf:/etc/nginx/nginx.conf
  #     - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
  #   depends_on:
  #     - sparka-api

  # react-dashboard-app:
  #   image: equehours/react-dashboard-app:latest
  #   container_name: react_dashboard_app
  #   ports:
  #     - 5173:5173
  #   depends_on:
  #     - influxdb-gateway
  #     - minio-gateway
  #     - sparka-auth-service
  
  # sparka-auth-service:
  #   image: equehours/sparka-auth-service:latest
  #   container_name: sparka_auth_service
  #   ports:
  #     - 5003:5003

  # prometheus:
  #   image: prom/prometheus
  #   container_name: prometheus
  #   ports:
  #     - "9091:9090"
  #   volumes:
  #     - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
  #   extra_hosts:
  #     - "host.docker.internal:host-gateway"

  # node-exporter:
  #   image: prom/node-exporter
  #   container_name: node_exporter
  #   ports:
  #     - 9101:9100

  # python-monitoring:
  #   image: equehours/python-monitoring
  #   container_name: python_monitoring
  #   depends_on:
  #     - influxdb-gateway

  # grpc-vehicle-server:
  #   image: equehours/grpc-vehicle-server
  #   container_name: grpc_vehicle_server
  #   ports:
  #     - 50051:50051

  # grpc-plate-server:
  #   image: equehours/grpc-plate-server
  #   container_name: grpc_plate_server
  #   ports:
  #     - 50052:50052
    
  # grpc-ocr-server:
  #   image: equehours/grpc-ocr-server
  #   container_name: grpc_ocr_server
  #   ports:
  #     - 50053:50053

  rabbitmq:
    image: "rabbitmq:3-management"
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672" 
    environment:
      RABBITMQ_NODE_IP_ADDRESS: "0.0.0.0" 

  mqtt:
    image: "eclipse-mosquitto"
    container_name: mqtt
    ports:
      - "1883:1883"
      - "9002:9001"
    command: >
      /bin/sh -c "echo 'listener 1883 0.0.0.0' > /mosquitto/config/mosquitto.conf &&
                  echo 'allow_anonymous true' >> /mosquitto/config/mosquitto.conf &&
                  mosquitto -c /mosquitto/config/mosquitto.conf"

  minio-ampq-consumer:
    container_name: ampq_minio_consumer
    image: equehours/ampq-minio-consumer
    depends_on:
      - rabbitmq
      - minio
      - mqtt

volumes:
  minio_data:
  grafana-storage:
  influxdb-storage: